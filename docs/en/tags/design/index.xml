<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Design on Learn-Software.com</title><link>/en/tags/design/</link><description>Recent content in Design on Learn-Software.com</description><generator>Hugo</generator><language>en</language><copyright>Copyright © 2022-2024 Learn-Software.com. All Rights Reserved.</copyright><lastBuildDate>Sun, 13 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/design/index.xml" rel="self" type="application/rss+xml"/><item><title>The System Design phase</title><link>/en/software-engineering/0200-sdlc/03-system-design/</link><pubDate>Sun, 13 Aug 2023 00:00:00 +0000</pubDate><guid>/en/software-engineering/0200-sdlc/03-system-design/</guid><description>&lt;p>It&amp;rsquo;s the stage where we transition from understanding what the software should do (requirements) to how it will achieve this&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. It provides the architectural blueprints for the software, establishing the foundation upon which code is written, databases are structured, and systems communicate. It&amp;rsquo;s a vital roadmap for developers, ensuring everyone understands and aligns on how the system will operate.&lt;/p>
&lt;p>System design typically breaks down into two sub-categories:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>High-Level design (HLD)&lt;/strong>: think of this as the macro view. It focuses on system architecture, representing the main components, their relationships, and interactions&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. It’s where we decide on the software&amp;rsquo;s major structural elements.&lt;/p></description></item></channel></rss>