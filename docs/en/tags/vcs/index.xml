<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vcs on Learn-Software.com</title><link>/en/tags/vcs/</link><description>Recent content in Vcs on Learn-Software.com</description><generator>Hugo</generator><language>en</language><copyright>Copyright Â© 2022-{year} [Learn-Software.com](https://learn-software.com/). All Rights Reserved.</copyright><lastBuildDate>Wed, 18 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/vcs/index.xml" rel="self" type="application/rss+xml"/><item><title>Revert a local change in Git</title><link>/en/blog/2023/01/revert-a-local-change-in-git/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>/en/blog/2023/01/revert-a-local-change-in-git/</guid><description>When we have created a commit locally but have not published it to the remote yet, we can use git reset to undo the commit and, if we wish, discard the changes. Although there are several options for git reset the most used are:
--soft: Does not touch the index file or the working tree at all (but resets the head to , just like all modes do). This leaves all your changed files &amp;ldquo;Changes to be committed&amp;rdquo;, as git status would put it.</description></item><item><title>Revert a pushed change in Git</title><link>/en/blog/2023/01/revert-a-pushed-change-in-git/</link><pubDate>Wed, 18 Jan 2023 00:00:00 +0000</pubDate><guid>/en/blog/2023/01/revert-a-pushed-change-in-git/</guid><description>When we realized that the last commit was a mistake but we already published it, the command to use is git revert &amp;lt;COMMIT_HASH&amp;gt;.
First we need to locate the ID of the commit we want to revert, it can be done with git log or git reflog commands. Then, run the git revert &amp;lt;COMMIT_HASH&amp;gt; command using the ID obtained in the previous step. Use the options -e or --edit to edit the commit message if we like.</description></item></channel></rss>