<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>I/O on Learn-Software.com</title><link>/en/tags/i/o/</link><description>Recent content in I/O on Learn-Software.com</description><generator>Hugo 0.125.1</generator><language>en</language><copyright>Copyright Â© 2022-{year} [Learn-Software.com](https://learn-software.com/). All Rights Reserved.</copyright><lastBuildDate>Tue, 19 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/i/o/index.xml" rel="self" type="application/rss+xml"/><item><title>Input and output operations</title><link>/en/programming/0200-starting-concepts/0202-io-operations/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>/en/programming/0200-starting-concepts/0202-io-operations/</guid><description>Screen output Python also provides functions to send program output to &amp;ldquo;standard output&amp;rdquo;, usually the screen or terminal1.
The print() function displays the value passed as a parameter:
1name = &amp;#34;Eric&amp;#34; 2print(name) # displays &amp;#34;Eric&amp;#34; We can print multiple values separated by commas2:
1print(&amp;#34;Hello&amp;#34;, name, &amp;#34;!&amp;#34;) # displays &amp;#34;Hello Eric!&amp;#34; We can also use literal values without assigning to variables3:
1print(&amp;#34;2 + 3 =&amp;#34;, 2 + 3) # displays &amp;#34;2 + 3 = 5&amp;#34; Output formatting Python provides various ways to format output4:</description></item></channel></rss>