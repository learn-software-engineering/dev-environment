<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>factorial on Learn-Software.com</title><link>/en/tags/factorial/</link><description>Recent content in factorial on Learn-Software.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2022-{year} [Learn-Software.com](https://learn-software.com/). All Rights Reserved.</copyright><lastBuildDate>Sat, 30 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="/en/tags/factorial/index.xml" rel="self" type="application/rss+xml"/><item><title>Recursive Functions</title><link>/en/programming/0200-starting-concepts/0205-recursive-functions/</link><pubDate>Sat, 30 Sep 2023 00:00:00 +0000</pubDate><guid>/en/programming/0200-starting-concepts/0205-recursive-functions/</guid><description>Recursion: the art of calling yourself Imagine a box of mirrors where each mirror reflects what it sees in the next, creating an infinite series of reflections. Recursion in programming is something similar. It is a technique where a function calls itself directly or indirectly1. This creates a cycle where the function solves a problem by dividing it into smaller instances of the same problem, until reaching a simple base case that can be solved directly.</description></item></channel></rss>