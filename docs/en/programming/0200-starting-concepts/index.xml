<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Starting Concepts on Learn-Software.com</title><link>/en/programming/0200-starting-concepts/</link><description>Recent content in Starting Concepts on Learn-Software.com</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2022-{year} [Learn-Software.com](https://learn-software.com/). All Rights Reserved.</copyright><lastBuildDate>Sat, 30 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="/en/programming/0200-starting-concepts/index.xml" rel="self" type="application/rss+xml"/><item><title>Recursive Functions</title><link>/en/programming/0200-starting-concepts/0205-recursive-functions/</link><pubDate>Sat, 30 Sep 2023 00:00:00 +0000</pubDate><guid>/en/programming/0200-starting-concepts/0205-recursive-functions/</guid><description>Recursion: the art of calling yourself Imagine a box of mirrors where each mirror reflects what it sees in the next, creating an infinite series of reflections. Recursion in programming is something similar. It is a technique where a function calls itself directly or indirectly1. This creates a cycle where the function solves a problem by dividing it into smaller instances of the same problem, until reaching a simple base case that can be solved directly.</description></item><item><title>Functions</title><link>/en/programming/0200-starting-concepts/0204-functions/</link><pubDate>Fri, 29 Sep 2023 00:00:00 +0000</pubDate><guid>/en/programming/0200-starting-concepts/0204-functions/</guid><description>What are functions? A function, in simple terms, is a block of code that executes only when called. You can think of it as a small program within your main program, designed to perform a specific task1. A function can also be seen as a black box: we pass an input (parameters), some internal processing occurs, and it produces an output (return value).
Functions allow us to segment our code into logical parts where each part performs a single action.</description></item><item><title>Flow Control</title><link>/en/programming/0200-starting-concepts/0203-flow-control-structures/</link><pubDate>Wed, 27 Sep 2023 00:00:00 +0000</pubDate><guid>/en/programming/0200-starting-concepts/0203-flow-control-structures/</guid><description>Conditions: making decisions in code Life is full of decisions: &amp;ldquo;If it rains, I&amp;rsquo;ll take an umbrella. Otherwise, I&amp;rsquo;ll wear sunglasses.&amp;rdquo; These decisions are also present in the world of programming. Conditions are like questions the computer asks itself. They allow us to make decisions and execute specific code based on a condition1. They can be as simple as &amp;ldquo;Is it raining?&amp;rdquo; or as complex as &amp;ldquo;Is it the weekend and do I have less than $100 in my bank account?</description></item><item><title>Input and output operations</title><link>/en/programming/0200-starting-concepts/0202-io-operations/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>/en/programming/0200-starting-concepts/0202-io-operations/</guid><description>Screen output Python also provides functions to send program output to &amp;ldquo;standard output&amp;rdquo;, usually the screen or terminal1.
The print() function displays the value passed as a parameter:
1name = &amp;#34;Eric&amp;#34; 2print(name) # displays &amp;#34;Eric&amp;#34; We can print multiple values separated by commas2:
1print(&amp;#34;Hello&amp;#34;, name, &amp;#34;!&amp;#34;) # displays &amp;#34;Hello Eric!&amp;#34; We can also use literal values without assigning to variables3:
1print(&amp;#34;2 + 3 =&amp;#34;, 2 + 3) # displays &amp;#34;2 + 3 = 5&amp;#34; Output formatting Python provides various ways to format output4:</description></item><item><title>Variables and Data Types</title><link>/en/programming/0200-starting-concepts/0201-variables-data-types/</link><pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate><guid>/en/programming/0200-starting-concepts/0201-variables-data-types/</guid><description>Variables A variable is a container to store data in the computer&amp;rsquo;s memory. We can think of it as a box with a label. The label is the variable name and inside the box its value is stored.
To declare a variable in Python we just write the name and assign a value:
1age = 28 2price = 19.95 3student = True Variable names must start with letters or underscore, and can only contain letters, numbers and underscores.</description></item></channel></rss>