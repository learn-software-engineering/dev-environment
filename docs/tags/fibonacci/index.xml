<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fibonacci" on Learn-Software.com</title><link>/tags/fibonacci/</link><description>Recent content in Fibonacci" on Learn-Software.com</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 01 Oct 2024 09:29:51 +0100</lastBuildDate><atom:link href="/tags/fibonacci/index.xml" rel="self" type="application/rss+xml"/><item><title>Recursive Functions</title><link>/programming/0200-starting-concepts/0205-recursive-functions/</link><pubDate>Sat, 30 Sep 2023 00:00:00 +0000</pubDate><guid>/programming/0200-starting-concepts/0205-recursive-functions/</guid><description>&lt;h2 id="recursion-the-art-of-calling-yourself">Recursion: the art of calling yourself&lt;/h2>
&lt;p>Imagine a box of mirrors where each mirror reflects what it sees in the next, creating an infinite series of reflections. Recursion in programming is something similar. It is a technique where a function calls itself directly or indirectly&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. This creates a cycle where the function solves a problem by dividing it into smaller instances of the same problem, until reaching a simple base case that can be solved directly.&lt;/p></description></item></channel></rss>