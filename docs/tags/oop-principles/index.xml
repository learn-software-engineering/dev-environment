<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>oop-principles on Learn-Software.com</title><link>/tags/oop-principles/</link><description>Recent content in oop-principles on Learn-Software.com</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sun, 02 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/oop-principles/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction to OOP</title><link>/posts/oop/01-intro/</link><pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate><guid>/posts/oop/01-intro/</guid><description>Object-Oriented Programming (OOP) is a paradigm that helps organize code using real-world concepts, making it more readable, reusable, and maintainable. It&amp;rsquo;s built around the idea that everything can be represented as objects.
OOP emerged in the 1960s with the programming language Simula, but it gained prominence in the 1980s with languages like C++ and Smalltalk. At its core, OOP models the code as &amp;ldquo;objects&amp;rdquo; that bundle both state (attributes) and behaviors (methods).</description></item></channel></rss>