<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>interfaces on Learn-Software.com</title><link>/tags/interfaces/</link><description>Recent content in interfaces on Learn-Software.com</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 12 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/interfaces/index.xml" rel="self" type="application/rss+xml"/><item><title>Abstraction</title><link>/posts/oop/06-abstraction/</link><pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate><guid>/posts/oop/06-abstraction/</guid><description>Abstraction is one of the key principles in Object-Oriented Programming (OOP). It plays a vital role in managing complexity by hiding unnecessary details and exposing only what&amp;rsquo;s essential. This article, will explore the concept of abstraction, its purpose, abstract classes, interfaces, and implementation in Python.
Abstraction refers to the practice of hiding the complex reality while exposing only the essential parts. It&amp;rsquo;s like viewing something at a high level without delving into the details.</description></item></channel></rss>