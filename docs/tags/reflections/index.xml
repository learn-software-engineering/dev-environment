<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>reflections on Learn-Software.com</title><link>/tags/reflections/</link><description>Recent content in reflections on Learn-Software.com</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sun, 16 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/reflections/index.xml" rel="self" type="application/rss+xml"/><item><title>Advanced concepts</title><link>/posts/oop/08-advanced-concepts/</link><pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate><guid>/posts/oop/08-advanced-concepts/</guid><description>Object-Oriented Programming (OOP) has many advanced concepts that take the programming paradigm to a higher level. These concepts enable developers to write code that is more efficient, flexible, and maintainable. In this article, we will delve into some of these advanced concepts, including multithreading, generics/templates, reflection, serialization and deserialization, and dependency injection. Though we&amp;rsquo;ll provide Python examples where applicable, it&amp;rsquo;s worth noting that some of these concepts might be more prevalent in other programming languages.</description></item></channel></rss>