<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>composition on Learn-Software.com</title><link>/tags/composition/</link><description>Recent content in composition on Learn-Software.com</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Fri, 14 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/composition/index.xml" rel="self" type="application/rss+xml"/><item><title>Associations, aggregations, and compositions</title><link>/posts/oop/07-associations/</link><pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate><guid>/posts/oop/07-associations/</guid><description>Understanding relationships between classes is vital for designing robust and maintainable systems. This article, will explore three types of relationships: Associations, Aggregations, and Compositions. We&amp;rsquo;ll look into their definitions, differences, and applications, providing examples in Python and using UML diagrams.
Definitions Association An association represents a “using” relationship between two or more objects. It indicates that objects of one class are somehow connected or utilize objects of another class.
Aggregation Aggregation is a specialized form of association where one class is a part of another class but both exist independently.</description></item></channel></rss>