<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>adapter on Learn-Software.com</title><link>/tags/adapter/</link><description>Recent content in adapter on Learn-Software.com</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 27 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/adapter/index.xml" rel="self" type="application/rss+xml"/><item><title>Design Patterns</title><link>/posts/programming-basics/11-design-patterns/</link><pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate><guid>/posts/programming-basics/11-design-patterns/</guid><description>Design patterns are tried-and-true solutions to common problems that arise in software development. They represent best practices and are used to create organized, clean, and scalable code. This article covers various design patterns with examples in Python.
Types of design patterns Creational patterns: are focused on the process of object creation, abstracting the instantiation process.
Structural patterns: are concerned with the composition of classes or objects, simplifying the structure and identifying relationships between objects.</description></item></channel></rss>