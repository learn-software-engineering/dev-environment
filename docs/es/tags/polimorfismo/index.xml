<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Polimorfismo on Learn-Software.com</title><link>/es/tags/polimorfismo/</link><description>Recent content in Polimorfismo on Learn-Software.com</description><generator>Hugo</generator><language>es</language><lastBuildDate>Sun, 06 Apr 2025 13:36:18 +0100</lastBuildDate><atom:link href="/es/tags/polimorfismo/index.xml" rel="self" type="application/rss+xml"/><item><title>Polimorfismo</title><link>/es/programacion/poo/los-cuatro-pilares/polimorfismo/</link><pubDate>Sat, 12 Oct 2024 00:00:00 +0000</pubDate><guid>/es/programacion/poo/los-cuatro-pilares/polimorfismo/</guid><description>&lt;p>El polimorfismo permite escribir código flexible y reutilizable al permitirnos trabajar con objetos a un nivel más abstracto, sin necesidad de conocer sus tipos específicos.&lt;/p>
&lt;p>Existen dos tipos principales de polimorfismo en la programación orientada a objetos:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Polimorfismo en tiempo de compilación (Polimorfismo estático)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Se logra a través de la &lt;em>sobrecarga&lt;/em> de métodos.&lt;/li>
&lt;li>Se resuelve en tiempo de compilación.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Polimorfismo en tiempo de ejecución (Polimorfismo dinámico)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Se logra a través de la &lt;em>sobrescritura&lt;/em> de métodos.&lt;/li>
&lt;li>Se resuelve en tiempo de ejecución.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>Python admite principalmente el polimorfismo en tiempo de ejecución, ya que es un lenguaje de tipado dinámico. Sin embargo, podemos demostrar conceptos similares al polimorfismo en tiempo de compilación también.&lt;/p></description></item></channel></rss>