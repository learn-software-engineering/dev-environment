<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>I/O on Learn-Software.com</title><link>/es/tags/i/o/</link><description>Recent content in I/O on Learn-Software.com</description><generator>Hugo 0.125.1</generator><language>es</language><copyright>Copyright © 2022-{year} [Learn-Software.com](https://learn-software.com/). Todos los derechos reservados.</copyright><lastBuildDate>Tue, 19 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="/es/tags/i/o/index.xml" rel="self" type="application/rss+xml"/><item><title>Operaciones de Entrada y Salida</title><link>/es/programming/0200-starting-concepts/0202-io-operations/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programming/0200-starting-concepts/0202-io-operations/</guid><description>Salida a pantalla Python también provee funciones para enviar la salida de un programa a la &amp;ldquo;salida estándar&amp;rdquo;, generalmente la pantalla o terminal1.
La función print() muestra el valor pasado como parámetro:
1nombre = &amp;#34;Eric&amp;#34; 2print(nombre) # muestra &amp;#34;Eric&amp;#34; Podemos imprimir múltiples valores separados por comas2:
1print(&amp;#34;Hola&amp;#34;, nombre, &amp;#34;!&amp;#34;) # muestra &amp;#34;Hola Eric!&amp;#34; También podemos usar valores literales sin asignar a variables3:
1print(&amp;#34;2 + 3 =&amp;#34;, 2 + 3) # muestra &amp;#34;2 + 3 = 5&amp;#34; Formateo de salida Python provee varias formas de dar formato a la salida4:</description></item></channel></rss>