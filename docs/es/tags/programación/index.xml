<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programación on Learn-Software.com</title><link>/es/tags/programaci%C3%B3n/</link><description>Recent content in Programación on Learn-Software.com</description><generator>Hugo</generator><language>es</language><lastBuildDate>Mon, 17 Mar 2025 09:03:24 +0000</lastBuildDate><atom:link href="/es/tags/programaci%C3%B3n/index.xml" rel="self" type="application/rss+xml"/><item><title>Arreglos</title><link>/es/programacion/estructuras-de-datos/0401-arrays/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>/es/programacion/estructuras-de-datos/0401-arrays/</guid><description>&lt;p>Un array es una estructura de datos que representa un conjunto de elementos, los cuales se acceden a través de índices numéricos contiguos que van desde 0 hasta el tamaño del array menos 1. Los arrays proveen acceso rápido y directo a los elementos en base a su posición.&lt;/p>
&lt;p>En lenguajes como Python y Ruby, los arrays se conocen como &amp;rsquo;listas&amp;rsquo; (lists). En Javascript se les conoce como &amp;lsquo;arreglos&amp;rsquo; (arrays).&lt;/p></description></item><item><title>Variables y Tipos de Datos</title><link>/es/programacion/conceptos-iniciales/variables-tipos-datos/</link><pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/conceptos-iniciales/variables-tipos-datos/</guid><description>&lt;h2 id="variables">Variables&lt;/h2>
&lt;p>Una variable es un contenedor para almacenar datos en la memoria de la computadora. Podemos pensar en ella como una caja con una etiqueta. La etiqueta es el nombre de la variable y dentro de la caja se almacena su valor.&lt;/p>
&lt;p>Para declarar una variable en Python solo escribimos el nombre y le asignamos un valor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>edad &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">28&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>precio &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">19.95&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>soltero &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Los nombres de variables deben comenzar con letras o guión bajo, y sólo pueden contener letras, números y guiones bajos. Se recomienda usar nombres significativos que representen el propósito de la variable.&lt;/p></description></item><item><title>La Computadora</title><link>/es/programacion/intro/computadoras/</link><pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/intro/computadoras/</guid><description>&lt;p>Si alguna vez te has preguntado qué es lo que hace &amp;ldquo;tictac&amp;rdquo; dentro de esa caja metálica que llamamos computadora, estás en el lugar indicado. En esencia, una computadora es una combinación de hardware y software que trabajan juntos para llevar a cabo tareas específicas.&lt;/p>
&lt;p>El &lt;em>&lt;strong>hardware&lt;/strong>&lt;/em> es toda la parte física de la computadora: el CPU (que es como el cerebro de la máquina), la RAM (donde la computadora guarda la información con la que está trabajando en un momento determinado), dispositivos de almacenamiento (donde se guardan los datos de forma permanente) y periféricos (como el teclado, el mouse o la pantalla)&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p></description></item><item><title>Mapas (Diccionarios)</title><link>/es/programacion/estructuras-de-datos/0402-maps/</link><pubDate>Tue, 31 Oct 2023 00:00:00 +0000</pubDate><guid>/es/programacion/estructuras-de-datos/0402-maps/</guid><description>&lt;p>Un diccionario, o mapa, consiste en una colección de pares clave-valor. La clave se utiliza para acceder al valor asociado. Las claves deben ser únicas dentro de un diccionario. Los valores pueden repetirse.&lt;/p>
&lt;p>&lt;img src="../../../images/content/programming/0400-data-structures-1/diagram-maps.jpg" alt="Diagrama de un diccionario">&lt;/p>
&lt;hr>
&lt;h2 id="operaciones-principales">Operaciones principales&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>Añadir/actualizar:&lt;/strong> Inserta un par clave-valor. Si la clave existía, su valor es reemplazado.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>diccionario[&lt;span style="color:#e6db74">&amp;#39;clave&amp;#39;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;valor&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Obtener valor:&lt;/strong> Acceder al valor dada una clave.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>valor &lt;span style="color:#f92672">=&lt;/span> diccionario[&lt;span style="color:#e6db74">&amp;#39;clave&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Eliminar:&lt;/strong> Remueve un par clave-valor del diccionario.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">del&lt;/span> diccionario[&lt;span style="color:#e6db74">&amp;#39;clave&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>&lt;strong>Recorrer:&lt;/strong> Iterar sobre las claves, valores o pares del diccionario.
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> clave &lt;span style="color:#f92672">in&lt;/span> diccionario:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(clave, diccionario[clave]) &lt;span style="color:#75715e"># clave, valor&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="creación-de-un-diccionario-o-mapa">Creación de un diccionario o mapa&lt;/h2>
&lt;p>La sintaxis para crear mapas o diccionarios en Python es la siguiente:&lt;/p></description></item><item><title>Operaciones de Entrada y Salida</title><link>/es/programacion/conceptos-iniciales/operaciones-entrada-salida/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/conceptos-iniciales/operaciones-entrada-salida/</guid><description>&lt;h2 id="salida-a-pantalla">Salida a pantalla&lt;/h2>
&lt;p>Python también provee funciones para enviar la salida de un programa a la &amp;ldquo;salida estándar&amp;rdquo;, generalmente la pantalla o terminal&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>La función &lt;code>print()&lt;/code> muestra el valor pasado como parámetro:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>nombre &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Eric&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print(nombre) &lt;span style="color:#75715e"># muestra &amp;#34;Eric&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Podemos imprimir múltiples valores separados por comas&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;Hola&amp;#34;&lt;/span>, nombre, &lt;span style="color:#e6db74">&amp;#34;!&amp;#34;&lt;/span>) &lt;span style="color:#75715e"># muestra &amp;#34;Hola Eric!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>También podemos usar valores literales sin asignar a variables&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>print(&lt;span style="color:#e6db74">&amp;#34;2 + 3 =&amp;#34;&lt;/span>, &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>) &lt;span style="color:#75715e"># muestra &amp;#34;2 + 3 = 5&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="formateo-de-salida">Formateo de salida&lt;/h3>
&lt;p>Python provee varias formas de dar formato a la salida&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>:&lt;/p></description></item><item><title>Sistemas de Numeración</title><link>/es/programacion/intro/sistemas-numeracion/</link><pubDate>Tue, 05 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/intro/sistemas-numeracion/</guid><description>&lt;h2 id="el-sistema-decimal-la-base-de-nuestra-cotidianidad">El sistema decimal: la base de nuestra cotidianidad&lt;/h2>
&lt;p>Desde pequeños, nos enseñan a contar usando diez dígitos: del 0 al 9. Este sistema, conocido como decimal, es la base de casi todas nuestras actividades matemáticas y financieras, desde sumar cuentas hasta calcular intereses en el banco&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. Tiene su origen en la cantidad de dedos que tenemos en las manos, lo que lo convierte en el sistema más intuitivo y natural para nosotros. Pero lo que lo hace especial es su naturaleza posicional.&lt;/p></description></item><item><title>Listas enlazadas</title><link>/es/programacion/estructuras-de-datos/0403-linked-lists/</link><pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate><guid>/es/programacion/estructuras-de-datos/0403-linked-lists/</guid><description>&lt;p>Una lista enlazada se compone de &lt;code>nodos&lt;/code> donde cada nodo tiene dos partes:&lt;/p>
&lt;ul>
&lt;li>Dato o información&lt;/li>
&lt;li>Referencia al siguiente nodo&lt;/li>
&lt;/ul>
&lt;p>Los nodos se organizan de forma secuencial, cada uno apuntando al siguiente. El último nodo apunta a nulo para indicar el final.&lt;/p>
&lt;p>Esta estructura dinámica permite inserción y eliminación eficiente de nodos.&lt;/p>
&lt;hr>
&lt;h2 id="tipos-de-listas-enlazadas">Tipos de listas enlazadas&lt;/h2>
&lt;p>Existen varios tipos:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Simplemente enlazada:&lt;/strong> Cada nodo apunta al siguiente. Son útiles para colas (&lt;em>queues&lt;/em>) y pilas (&lt;em>stacks&lt;/em>).&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="../../../images/content/programming/0400-data-structures-1/diagram-linked-list.jpg" alt="Diagrama de una lista enlazada simple">&lt;/p></description></item><item><title>Control de Flujo</title><link>/es/programacion/conceptos-iniciales/estructuras-control-flujo/</link><pubDate>Wed, 27 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/conceptos-iniciales/estructuras-control-flujo/</guid><description>&lt;h2 id="condiciones-tomando-decisiones-en-el-código">Condiciones: tomando decisiones en el código&lt;/h2>
&lt;p>La vida está llena de decisiones: &amp;ldquo;Si llueve, llevaré un paraguas. De lo contrario, usaré anteojos de sol&amp;rdquo;. Estas decisiones también están presentes en el mundo de la programación. Las condiciones son como preguntas que la computadora se hace. Nos permiten tomar decisiones y ejecutar código específico dependiendo de una condición&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. Pueden ser simples como &amp;ldquo;¿Está lloviendo?&amp;rdquo; o complejas como &amp;ldquo;¿Es fin de semana y tengo menos de $100 en mi cuenta bancaria?&amp;rdquo;.&lt;/p></description></item><item><title>Lógica Booleana</title><link>/es/programacion/intro/logica-booleana/</link><pubDate>Sat, 09 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/intro/logica-booleana/</guid><description>&lt;p>La lógica booleana, nombrada en honor a &lt;a href="https://es.wikipedia.org/wiki/George_Boole">George Boole&lt;/a>, un matemático inglés del siglo XIX, es un sistema matemático que se ocupa de operaciones que tienen solo dos resultados posibles: verdadero o falso, representados generalmente como 1 y 0, respectivamente&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. En su obra &amp;ldquo;An Investigation of the Laws of Thought&amp;rdquo;, Boole estableció las bases de esta lógica, presentando un sistema algebraico que podría utilizarse para representar estructuras lógicas.&lt;/p>
&lt;h2 id="operaciones-booleanas">Operaciones Booleanas&lt;/h2>
&lt;p>Dentro de la lógica booleana, existen operaciones fundamentales que permiten manipular y combinar estas expresiones binarias:&lt;/p></description></item><item><title>Pilas</title><link>/es/programacion/estructuras-de-datos/0404-stacks/</link><pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate><guid>/es/programacion/estructuras-de-datos/0404-stacks/</guid><description>&lt;p>La naturaleza &lt;strong>LIFO&lt;/strong> de las pilas se debe a que sólo se puede acceder y manipular el elemento superior. La operación de colocar un elemento sobre la pila se conoce como &lt;em>&amp;ldquo;push&amp;rdquo;&lt;/em>, mientras que sacar un elemento de la pila es un &lt;em>&amp;ldquo;pop&amp;rdquo;&lt;/em>. El funcionamiento LIFO provoca que el último elemento colocado en una pila sea el primero en ser retirado.&lt;/p>
&lt;p>&lt;img src="../../../images/content/programming/0400-data-structures-1/diagram-stacks.jpg" alt="Estructura de una pila">&lt;/p>
&lt;hr>
&lt;h2 id="operaciones-principales">Operaciones principales&lt;/h2>
&lt;p>Las operaciones primarias que soporta una estructura de pila son:&lt;/p></description></item><item><title>Funciones</title><link>/es/programacion/conceptos-iniciales/funciones/</link><pubDate>Fri, 29 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/conceptos-iniciales/funciones/</guid><description>&lt;h2 id="qué-son-las-funciones">¿Qué son las funciones?&lt;/h2>
&lt;p>Una función, en términos simples, es un bloque de código que se ejecuta sólo cuando es llamado. Puedes pensar en ella como un pequeño programa dentro de tu programa principal, diseñado para realizar una tarea específica&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. Una función también puede verse como una caja negra: le pasamos una entrada (parámetros), ocurre algún procesamiento interno, y produce una salida (retorno).&lt;/p>
&lt;p>Las funciones nos permiten segmentar nuestro código en partes lógicas, donde cada parte realiza una única acción. Esto brinda varios beneficios&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p></description></item><item><title>Configura tu Entorno de Desarrollo</title><link>/es/programacion/intro/configura-entorno-desarrollo/</link><pubDate>Sun, 10 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/intro/configura-entorno-desarrollo/</guid><description>&lt;h2 id="elegir-un-lenguaje-de-programación">Elegir un lenguaje de programación&lt;/h2>
&lt;p>La elección del lenguaje de programación es el primer y quizás el más crucial paso en el proceso de aprendizaje. Hay varios factores a considerar al seleccionar un lenguaje, incluyendo:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Propósito&lt;/strong>: ¿Para qué quieres programar? Si es para desarrollo web, JavaScript o PHP podrían ser buenas opciones. Si estás interesado en la ciencia de datos, R o Python podrían ser más adecuados.&lt;/li>
&lt;li>&lt;strong>Comunidad&lt;/strong>: Un lenguaje con una comunidad activa puede ser esencial para los principiantes. Una comunidad vibrante generalmente significa más recursos, tutoriales y soluciones disponibles en línea.&lt;/li>
&lt;li>&lt;strong>Curva de aprendizaje&lt;/strong>: Algunos lenguajes son más fáciles de aprender que otros. Es fundamental elegir uno que coincida con tu nivel de experiencia y paciencia.&lt;/li>
&lt;li>&lt;strong>Oportunidades de trabajo&lt;/strong>: Si estás buscando una carrera en programación, investigar la demanda del mercado para diferentes lenguajes puede ser útil.&lt;/li>
&lt;/ol>
&lt;p>Aunque hay muchos lenguajes valiosos y poderosos, para este curso, hemos elegido &lt;a href="https://www.python.org/">&lt;strong>Python&lt;/strong>&lt;/a>. Este lenguaje es conocido por su simplicidad y legibilidad, lo que lo hace ideal para aquellos que están empezando. Además, Python cuenta con una comunidad activa y una amplia gama de aplicaciones, desde desarrollo web hasta inteligencia artificial&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p></description></item><item><title>Colas</title><link>/es/programacion/estructuras-de-datos/0405-queues/</link><pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate><guid>/es/programacion/estructuras-de-datos/0405-queues/</guid><description>&lt;p>La naturaleza FIFO (first in, first out) de las colas se debe a que sólo se puede acceder y manipular el elemento inicial. Cuando se agrega un elemento a la cola se conoce como &lt;em>&amp;ldquo;enqueue&amp;rdquo;&lt;/em>, mientras que eliminar un elemento se denomina &lt;em>&amp;ldquo;dequeue&amp;rdquo;&lt;/em>.&lt;/p>
&lt;p>Esto hace que el primer elemento en ser añadido a la cola también sea el primero en ser retirado, de ahí su comportamiento FIFO.&lt;/p>
&lt;p>&lt;img src="../../../images/content/programming/0400-data-structures-1/diagram-queues.jpg" alt="Diagrama de una cola">&lt;/p></description></item><item><title>Funciones Recursivas</title><link>/es/programacion/conceptos-iniciales/funciones-recursivas/</link><pubDate>Sat, 30 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programacion/conceptos-iniciales/funciones-recursivas/</guid><description>&lt;h2 id="recursión-el-arte-de-llamarse-a-sí-mismo">Recursión: el arte de llamarse a sí mismo&lt;/h2>
&lt;p>Imagina una caja de espejos donde cada espejo refleja lo que ve en el siguiente, creando una serie infinita de reflejos. La recursión en programación es algo similar. Es una técnica donde una función se llama a sí misma directa o indirectamente[^1^]. Esto crea un ciclo en el cual la función resuelve un problema dividiéndolo en instancias más pequeñas del mismo problema, hasta llegar a un caso base sencillo de resolver.&lt;/p></description></item></channel></rss>