<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Conceptos Iniciales on Learn-Software.com</title><link>/es/programming/0200-starting-concepts/</link><description>Recent content in Conceptos Iniciales on Learn-Software.com</description><generator>Hugo</generator><language>es</language><copyright>Copyright © 2022-2024 Learn-Software.com. Todos los derechos reservados.</copyright><lastBuildDate>Sat, 30 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="/es/programming/0200-starting-concepts/index.xml" rel="self" type="application/rss+xml"/><item><title>Funciones Recursivas</title><link>/es/programming/0200-starting-concepts/0205-recursive-functions/</link><pubDate>Sat, 30 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programming/0200-starting-concepts/0205-recursive-functions/</guid><description>Recursión: el arte de llamarse a sí mismo Imagina una caja de espejos donde cada espejo refleja lo que ve en el siguiente, creando una serie infinita de reflejos. La recursión en programación es algo similar. Es una técnica donde una función se llama a sí misma directa o indirectamente[^1^]. Esto crea un ciclo en el cual la función resuelve un problema dividiéndolo en instancias más pequeñas del mismo problema, hasta llegar a un caso base sencillo de resolver.</description></item><item><title>Funciones</title><link>/es/programming/0200-starting-concepts/0204-functions/</link><pubDate>Fri, 29 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programming/0200-starting-concepts/0204-functions/</guid><description>¿Qué son las funciones? Una función, en términos simples, es un bloque de código que se ejecuta sólo cuando es llamado. Puedes pensar en ella como un pequeño programa dentro de tu programa principal, diseñado para realizar una tarea específica1. Una función también puede verse como una caja negra: le pasamos una entrada (parámetros), ocurre algún procesamiento interno, y produce una salida (retorno).
Las funciones nos permiten segmentar nuestro código en partes lógicas, donde cada parte realiza una única acción.</description></item><item><title>Control de Flujo</title><link>/es/programming/0200-starting-concepts/0203-flow-control-structures/</link><pubDate>Wed, 27 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programming/0200-starting-concepts/0203-flow-control-structures/</guid><description>Condiciones: tomando decisiones en el código La vida está llena de decisiones: &amp;ldquo;Si llueve, llevaré un paraguas. De lo contrario, usaré anteojos de sol&amp;rdquo;. Estas decisiones también están presentes en el mundo de la programación. Las condiciones son como preguntas que la computadora se hace. Nos permiten tomar decisiones y ejecutar código específico dependiendo de una condición1. Pueden ser simples como &amp;ldquo;¿Está lloviendo?&amp;rdquo; o complejas como &amp;ldquo;¿Es fin de semana y tengo menos de $100 en mi cuenta bancaria?</description></item><item><title>Operaciones de Entrada y Salida</title><link>/es/programming/0200-starting-concepts/0202-io-operations/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programming/0200-starting-concepts/0202-io-operations/</guid><description>Salida a pantalla Python también provee funciones para enviar la salida de un programa a la &amp;ldquo;salida estándar&amp;rdquo;, generalmente la pantalla o terminal1.
La función print() muestra el valor pasado como parámetro:
1nombre = &amp;#34;Eric&amp;#34; 2print(nombre) # muestra &amp;#34;Eric&amp;#34; Podemos imprimir múltiples valores separados por comas2:
1print(&amp;#34;Hola&amp;#34;, nombre, &amp;#34;!&amp;#34;) # muestra &amp;#34;Hola Eric!&amp;#34; También podemos usar valores literales sin asignar a variables3:
1print(&amp;#34;2 + 3 =&amp;#34;, 2 + 3) # muestra &amp;#34;2 + 3 = 5&amp;#34; Formateo de salida Python provee varias formas de dar formato a la salida4:</description></item><item><title>Variables y Tipos de Datos</title><link>/es/programming/0200-starting-concepts/0201-variables-data-types/</link><pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate><guid>/es/programming/0200-starting-concepts/0201-variables-data-types/</guid><description>Variables Una variable es un contenedor para almacenar datos en la memoria de la computadora. Podemos pensar en ella como una caja con una etiqueta. La etiqueta es el nombre de la variable y dentro de la caja se almacena su valor.
Para declarar una variable en Python solo escribimos el nombre y le asignamos un valor:
1edad = 28 2precio = 19.95 3soltero = True Los nombres de variables deben comenzar con letras o guión bajo, y sólo pueden contener letras, números y guiones bajos.</description></item></channel></rss>