<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="https://learn-software.com/dev-environment/feed.xml" rel="self" type="application/atom+xml" /><link href="https://learn-software.com/dev-environment/" rel="alternate" type="text/html" /><updated>2023-03-15T18:28:24+00:00</updated><id>https://learn-software.com/dev-environment/feed.xml</id><title type="html">Learn Software Engineering</title><subtitle>&quot;A place to learn about Software Engineering.&quot;</subtitle><entry><title type="html">Post: future date</title><link href="https://learn-software.com/dev-environment/future/draft/future-post-template-for-new-posts/" rel="alternate" type="text/html" title="Post: future date" /><published>9999-12-31T00:00:00+00:00</published><updated>9999-12-31T00:00:00+00:00</updated><id>https://learn-software.com/dev-environment/future/draft/future-post-template-for-new-posts</id><content type="html" xml:base="https://learn-software.com/dev-environment/future/draft/future-post-template-for-new-posts/"><![CDATA[<p>Test future post in draft folder.</p>]]></content><author><name>Maria Florencia Caro</name><email>learn.software.eng+mfcaro@gmail.com</email></author><category term="Future" /><category term="Draft" /><category term="Future" /><category term="Draft" /><category term="Test" /><summary type="html"><![CDATA[Test future post in draft folder.]]></summary></entry><entry><title type="html">Revert a change in git</title><link href="https://learn-software.com/dev-environment/version%20control/git-revert/" rel="alternate" type="text/html" title="Revert a change in git" /><published>2023-01-18T00:00:00+00:00</published><updated>2023-01-18T00:00:00+00:00</updated><id>https://learn-software.com/dev-environment/version%20control/git-revert</id><content type="html" xml:base="https://learn-software.com/dev-environment/version%20control/git-revert/"><![CDATA[<h2 id="revert-a-local-commit">Revert a local commit</h2>

<p>When we have created a commit locally but have not published it to the remote yet, we can use <code class="language-plaintext highlighter-rouge">git reset</code> to undo the commit and, if we wish, discard the changes.
Although there are several options for <code class="language-plaintext highlighter-rouge">git reset</code> the most used are:</p>

<blockquote>
  <ul>
    <li><code class="language-plaintext highlighter-rouge">--soft</code>: Does not touch the index file or the working tree at all (but resets the head to <COMMIT>, just like all modes do). This leaves all your changed files "Changes to be committed", as git status would put it.</COMMIT></li>
    <li><code class="language-plaintext highlighter-rouge">--hard</code>: Resets the index and working tree. Any changes to tracked files in the working tree since <COMMIT> are discarded. Any untracked files or directories in the way of writing any tracked files are simply deleted.</COMMIT></li>
  </ul>

  <p style="text-align: right;"><a href="https://git-scm.com/docs/git-reset">Git reset documentation</a></p>
</blockquote>

<p>Here there is an example about using <code class="language-plaintext highlighter-rouge">git reset</code>. We start by changing a file and creating a commit with the change.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  cat README.md
# Index

1
bash-3.2$
bash-3.2$  cat README.md
# Index

1
2
bash-3.2$
bash-3.2$  git add README.md
bash-3.2$
bash-3.2$  git commit -m "Add number 2 in README.md"
[main 3734fd5] Add number 2 in README.md
 1 file changed, 1 insertion(+)
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">git status</code> shows there is one commit pending to be published.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
</code></pre></div></div>

<p>Using <code class="language-plaintext highlighter-rouge">git reflog</code> to see the history.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>3734fd5 (HEAD -&gt; main) HEAD@{0}: commit: Add number 2 in README.md
866bfa8 (origin/main) HEAD@{1}: revert: Revert "Merge branch 'feature-1'"
e2f6d08 HEAD@{2}: merge feature-1: Merge made by the 'ort' strategy.
23644da HEAD@{3}: checkout: moving from feature-1 to main
</code></pre></div></div>

<p>Now we can use <code class="language-plaintext highlighter-rouge">git reset --soft &lt;COMMIT_ID&gt;</code> to undo the commit but keep the changes.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git reset --soft 866bfa8
bash-3.2$
bash-3.2$  git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged &lt;file&gt;..." to unstage)
        modified:   README.md

</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">git log</code> after using <code class="language-plaintext highlighter-rouge">git reset</code></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>commit 866bfa8a952d11240707ebfc87f3266034d42443 (HEAD -&gt; main, origin/main)
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 20:06:40 2023 -0300

    Revert "Merge branch 'feature-1'"

    This reverts commit e2f6d08d3b38a02a1c026cfb879f3131536757ac, reversing
    changes made to 23644dab9fc5828ecdd358c6d3acb4196ed23546.
</code></pre></div></div>

<p>We create a new commit so we can test the <code class="language-plaintext highlighter-rouge">git reset --hard</code> command.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged &lt;file&gt;..." to unstage)
        modified:   README.md

bash-3.2$  git commit -m "Add number 2 in README.md - NEW COMMIT"
[main 2e7193d] Add number 2 in README.md - NEW COMMIT
 1 file changed, 1 insertion(+)
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">git log</code> now shows the new commit.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>commit 2e7193db650b9ba0762fe73525df599a08f8577d (HEAD -&gt; main)
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Thu Jan 19 08:32:57 2023 -0300

    Add number 2 in README.md - NEW COMMIT

commit 866bfa8a952d11240707ebfc87f3266034d42443 (origin/main)
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 20:06:40 2023 -0300

    Revert "Merge branch 'feature-1'"

    This reverts commit e2f6d08d3b38a02a1c026cfb879f3131536757ac, reversing
    changes made to 23644dab9fc5828ecdd358c6d3acb4196ed23546.
</code></pre></div></div>

<p>Now we can use <code class="language-plaintext highlighter-rouge">git reset --hard &lt;COMMIT_ID&gt;</code> to undo the commit and discard all the changes.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git reset --hard 866bfa8
HEAD is now at 866bfa8 Revert "Merge branch 'feature-1'"
bash-3.2$
bash-3.2$  git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">git log</code> remains as it nothing had happened.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>commit 866bfa8a952d11240707ebfc87f3266034d42443 (HEAD -&gt; main, origin/main)
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 20:06:40 2023 -0300

    Revert "Merge branch 'feature-1'"

    This reverts commit e2f6d08d3b38a02a1c026cfb879f3131536757ac, reversing
    changes made to 23644dab9fc5828ecdd358c6d3acb4196ed23546.
</code></pre></div></div>

<h2 id="revert-a-published-commit">Revert a published commit</h2>

<p>When we realized that the last commit was a mistake but we already published it, the command to use is <code class="language-plaintext highlighter-rouge">git revert &lt;COMMIT_HASH&gt;</code>.</p>

<ul>
  <li>First we need to locate the ID of the commit we want to revert, it can be done with <code class="language-plaintext highlighter-rouge">git log</code> or <code class="language-plaintext highlighter-rouge">git reflog</code> commands.</li>
  <li>Then, run the <code class="language-plaintext highlighter-rouge">git revert &lt;COMMIT_HASH&gt;</code> command using the ID obtained in the previous step. Use the options <code class="language-plaintext highlighter-rouge">-e</code> or <code class="language-plaintext highlighter-rouge">--edit</code> to edit the commit message if we like.</li>
  <li>Push our changes so the revert is available for everyone in our group.</li>
</ul>

<h3 id="reverting-multiple-commits">Reverting multiple commits</h3>

<p>If we need to revert multiple commits we can revert them one by one using the <code class="language-plaintext highlighter-rouge">--no-commit</code> option in order to create a single revert commit at the end.</p>

<p>Imagine the history is like the following and we need to go back to <code class="language-plaintext highlighter-rouge">COMMIT-3</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>COMMIT-1 -&gt; COMMIT-2 -&gt; COMMIT-3 -&gt; COMMIT-4 -&gt; COMMIT-5 -&gt; COMMIT-6 -&gt; HEAD
</code></pre></div></div>

<p>This sequence of commands will get our files to the version of <code class="language-plaintext highlighter-rouge">COMMIT-3</code>:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git revert --no-commit COMMIT-6
bash-3.2$  git revert --no-commit COMMIT-5
bash-3.2$  git revert --no-commit COMMIT-4
bash-3.2$  git commit -m "Revert to version in COMMIT-3"
bash-3.2$  git push
</code></pre></div></div>

<h3 id="reverting-a-merge-commit">Reverting a merge commit</h3>

<blockquote>
  <p>-m parent-number, –mainline parent-number</p>

  <p>Usually you cannot revert a merge because you do not know which side of the merge should be considered the mainline. This option specifies the parent number (starting from 1) of the mainline and allows revert to reverse the change relative to the specified parent.</p>

  <p style="text-align: right;"><a href="https://git-scm.com/docs/git-revert">Git revert documentation</a></p>
</blockquote>

<p>When we need to revert a merge commit <code class="language-plaintext highlighter-rouge">git revert</code> command needs to be run with the <code class="language-plaintext highlighter-rouge">-m</code> or <code class="language-plaintext highlighter-rouge">--mainline</code> option to indicate the <strong>parent number</strong> because a <code class="language-plaintext highlighter-rouge">merge commit</code> has more than one parent and Git does not know which parent was target branch and which was the branch with the changes that should be reverted.</p>

<p>Here there is an example showing how to revert a merge commit.</p>

<p>Create the first commit in <code class="language-plaintext highlighter-rouge">main</code> branch.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  cat README.md
# Index

1
bash-3.2$
bash-3.2$  git commit -m "Add number 1 in README.md - main branch"
[main (root-commit) 23644da] Add number 1 in README.md - main branch
 1 file changed, 3 insertions(+)
 create mode 100644 README.md
bash-3.2$
bash-3.2$  git push -u origin main
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 254 bytes | 254.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:jnonino/test-repo.git
 * [new branch]      main -&gt; main
branch 'main' set up to track 'origin/main'.
bash-3.2$
</code></pre></div></div>

<p>The state of the <code class="language-plaintext highlighter-rouge">README.md</code> file in <code class="language-plaintext highlighter-rouge">main</code> branch.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
bash-3.2$
bash-3.2$  cat README.md
# Index

1
</code></pre></div></div>

<p>Branch <code class="language-plaintext highlighter-rouge">feature-1</code> created and added one commit.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git checkout -b feature-1
Switched to a new branch 'feature-1'
bash-3.2$
bash-3.2$  cat README.md
# Index

1
2
bash-3.2$
bash-3.2$  git add README.md
bash-3.2$
bash-3.2$  git commit -m "Add number 2 in README.md - feature-1 branch"
[feature-1 83ea1a3] Add number 2 in README.md - feature-1 branch
 1 file changed, 1 insertion(+)
bash-3.2$
bash-3.2$  git push --set-upstream origin feature-1
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Writing objects: 100% (3/3), 292 bytes | 292.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'feature-1' on GitHub by visiting:
remote:      https://github.com/jnonino/test-repo/pull/new/feature-1
remote:
To github.com:jnonino/test-repo.git
 * [new branch]      feature-1 -&gt; feature-1
branch 'feature-1' set up to track 'origin/feature-1'.
bash-3.2$
</code></pre></div></div>

<p>The state of <code class="language-plaintext highlighter-rouge">README.md</code> in the <code class="language-plaintext highlighter-rouge">feature-1</code> branch.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git status
On branch feature-1
Your branch is up to date with 'origin/feature-1'.

nothing to commit, working tree clean
bash-3.2$
bash-3.2$  cat README.md
# Index

1
2
</code></pre></div></div>

<p>Merge the <code class="language-plaintext highlighter-rouge">feature-1</code> branch into the <code class="language-plaintext highlighter-rouge">main</code> branch.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git checkout main
Switched to branch 'main'
Your branch is up to date with 'origin/main'.
bash-3.2$
bash-3.2$  git merge --no-ff feature-1
Merge made by the 'ort' strategy.
 README.md | 1 +
 1 file changed, 1 insertion(+)
bash-3.2$
bash-3.2$  git push
Enumerating objects: 1, done.
Counting objects: 100% (1/1), done.
Writing objects: 100% (1/1), 233 bytes | 233.00 KiB/s, done.
Total 1 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:jnonino/test-repo.git
   23644da..e2f6d08  main -&gt; main
bash-3.2$
</code></pre></div></div>

<p>Current state of <code class="language-plaintext highlighter-rouge">README.md</code> in <code class="language-plaintext highlighter-rouge">main</code> branch.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
bash-3.2$
bash-3.2$  cat README.md
# Index

1
2
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">git log</code> after merging <code class="language-plaintext highlighter-rouge">feature-1</code> into <code class="language-plaintext highlighter-rouge">main</code> branch.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>commit e2f6d08d3b38a02a1c026cfb879f3131536757ac (HEAD -&gt; main, origin/main)
Merge: 23644da 83ea1a3
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 19:58:19 2023 -0300

    Merge branch 'feature-1'

commit 83ea1a347e0e87b19a611997219089b5b9247d1f (origin/feature-1, feature-1)
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 19:53:38 2023 -0300

    Add number 2 in README.md - feature-1 branch

commit 23644dab9fc5828ecdd358c6d3acb4196ed23546
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 19:48:37 2023 -0300

    Add number 1 in README.md - main branch
</code></pre></div></div>

<p>To revert the merge commit, as it was stated above we need to pay attention to the <code class="language-plaintext highlighter-rouge">merge</code> field.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Merge: 23644da 83ea1a3
</code></pre></div></div>

<p>Running <code class="language-plaintext highlighter-rouge">git revert e2f6d08 -m 1</code> will reinstate the tree as it was in <code class="language-plaintext highlighter-rouge">23644da</code>, and <code class="language-plaintext highlighter-rouge">git revert e2f6d08 -m 2</code> will set the tree as it was in <code class="language-plaintext highlighter-rouge">83ea1a3</code>.
In this example we would like to leave the <code class="language-plaintext highlighter-rouge">main</code> branch as it was before the merge commit. For doing that, we need to run <code class="language-plaintext highlighter-rouge">git revert e2f6d08 -m 1</code>.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git revert e2f6d08 -m 1
[main 866bfa8] Revert "Merge branch 'feature-1'"
 1 file changed, 1 deletion(-)
bash-3.2$
bash-3.2$  git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

nothing to commit, working tree clean
bash-3.2$
bash-3.2$  git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Writing objects: 100% (3/3), 344 bytes | 344.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To github.com:jnonino/test-repo.git
   e2f6d08..866bfa8  main -&gt; main
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">git log</code> after reverting the merge commit.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>commit 866bfa8a952d11240707ebfc87f3266034d42443 (HEAD -&gt; main, origin/main)
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 20:06:40 2023 -0300

    Revert "Merge branch 'feature-1'"

    This reverts commit e2f6d08d3b38a02a1c026cfb879f3131536757ac, reversing
    changes made to 23644dab9fc5828ecdd358c6d3acb4196ed23546.

commit e2f6d08d3b38a02a1c026cfb879f3131536757ac
Merge: 23644da 83ea1a3
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 19:58:19 2023 -0300

    Merge branch 'feature-1'

commit 83ea1a347e0e87b19a611997219089b5b9247d1f (origin/feature-1, feature-1)
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 19:53:38 2023 -0300

    Add number 2 in README.md - feature-1 branch

commit 23644dab9fc5828ecdd358c6d3acb4196ed23546
Author: Julian Nonino &lt;learn.software.eng+jnonino@gmail.com&gt;
Date:   Wed Jan 18 19:48:37 2023 -0300

    Add number 1 in README.md - main branch
</code></pre></div></div>

<p>Current state of <code class="language-plaintext highlighter-rouge">README.md</code> in <code class="language-plaintext highlighter-rouge">main</code> branch.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-3.2$  git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean
bash-3.2$
bash-3.2$  cat README.md
# Index

1
</code></pre></div></div>]]></content><author><name>Julian Nonino</name><email>learn.software.eng+jnonino@gmail.com</email></author><category term="Version Control" /><category term="Git" /><category term="Version Control" /><summary type="html"><![CDATA[Revert a local commit]]></summary></entry><entry><title type="html">Post: Modified Date</title><link href="https://learn-software.com/dev-environment/drafts/post-modified/" rel="alternate" type="text/html" title="Post: Modified Date" /><published>2022-10-15T00:00:00+00:00</published><updated>2022-10-15T21:20:02+00:00</updated><id>https://learn-software.com/dev-environment/drafts/post-modified</id><content type="html" xml:base="https://learn-software.com/dev-environment/drafts/post-modified/"><![CDATA[<p>This post has been updated and should show a modified date if used in a layout.</p>

<p>First paragraph to test.</p>

<p>Second paragraph.</p>

<p>Third paragraph.</p>

<p>Fourth paragraph.</p>

<p>Fifth paragraph.</p>]]></content><author><name>Maria Florencia Caro</name><email>learn.software.eng+mfcaro@gmail.com</email></author><category term="Drafts" /><category term="Draft" /><category term="Test" /><summary type="html"><![CDATA[This post has been updated and should show a modified date if used in a layout.]]></summary></entry><entry><title type="html">Post: Standard with long title to test overlay image</title><link href="https://learn-software.com/dev-environment/drafts/post-standard/" rel="alternate" type="text/html" title="Post: Standard with long title to test overlay image" /><published>2022-10-15T00:00:00+00:00</published><updated>2022-10-15T00:00:00+00:00</updated><id>https://learn-software.com/dev-environment/drafts/post-standard</id><content type="html" xml:base="https://learn-software.com/dev-environment/drafts/post-standard/"><![CDATA[<p>First paragraph to test.</p>

<!--more-->

<p>This post has a manual excerpt <code class="language-plaintext highlighter-rouge">&lt;!--more--&gt;</code> set after the second paragraph. The following YAML Front Matter has also be applied:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">excerpt_separator</span><span class="pi">:</span> <span class="s2">"</span><span class="s">&lt;!--more--&gt;"</span>
</code></pre></div></div>

<h2 id="section-1">Section 1</h2>

<p>Second paragraph.</p>

<h3 id="section-11">Section 1.1</h3>

<p>Third paragraph.</p>

<h4 id="section-111">Section 1.1.1</h4>

<p>Fourth paragraph.</p>

<h4 id="section-112">Section 1.1.2</h4>

<p>Fifth paragraph.</p>

<h3 id="section-12">Section 1.2</h3>

<p>Sixth paragraph.</p>

<h2 id="section-2">Section 2</h2>

<p>Seventh paragraph.</p>

<h3 id="section-21">Section 2.1</h3>

<p>Eighth paragraph.</p>

<h3 id="section-22">Section 2.2</h3>

<p>Ninth paragraph.</p>

<h4 id="section-221">Section 2.2.1</h4>

<p>Tenth paragraph.</p>

<h4 id="section-222">Section 2.2.2</h4>

<p>Eleventh paragraph.</p>]]></content><author><name>Julian Nonino</name><email>learn.software.eng+jnonino@gmail.com</email></author><category term="Drafts" /><category term="Draft" /><category term="Test" /><summary type="html"><![CDATA[First paragraph to test.]]></summary></entry></feed>