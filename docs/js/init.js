(() => {
  // ns-hugo:/tmp/hugo_cache/modules/filecache/modules/pkg/mod/github.com/hbstack/header/modules/theme-toggle@v0.2.0/assets/hb/modules/header-theme-toggle/init/index.ts
  (() => {
    "use strict";
    const THEME_AUTO = "auto";
    const THEME_DARK = "dark";
    const THEME_LIGHT = "light";
    const THEME_KEY = "hb-theme";
    const getPreferredTheme = () => {
      return window.matchMedia && window.matchMedia("(prefers-color-scheme: dark)").matches ? THEME_DARK : THEME_LIGHT;
    };
    const getTheme = () => {
      const v = localStorage.getItem(THEME_KEY);
      return v ? v : THEME_AUTO;
    };
    const setTheme = (theme2, save = false) => {
      save && localStorage.setItem(THEME_KEY, theme2);
      const value = theme2 === THEME_AUTO ? getPreferredTheme() : theme2;
      document.documentElement.setAttribute("data-bs-theme", value);
      onSet(value);
    };
    const onSet = (theme2) => {
      const event = new CustomEvent("hb:theme", { detail: { theme: theme2 } });
      document.dispatchEvent(event);
    };
    const activeTheme = (theme2) => {
      document.querySelectorAll("[data-bs-theme-value]").forEach((toggle) => {
        if (toggle.getAttribute("data-bs-theme-value") === theme2) {
          toggle.classList.add("active");
        } else {
          toggle.classList.remove("active");
        }
      });
      const newIcon = document.querySelector(`[data-bs-theme-value="${theme2}"] svg`)?.cloneNode(true);
      const oldIcon = document.querySelector(".theme-toggle-icon svg");
      oldIcon?.replaceWith(newIcon);
    };
    const theme = getTheme();
    setTheme(theme);
    window.addEventListener("DOMContentLoaded", () => {
      activeTheme(theme);
      window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change", (e) => {
        if (getTheme() !== THEME_AUTO) {
          return;
        }
        setTheme(e.matches ? THEME_DARK : THEME_LIGHT);
      });
      document.querySelectorAll("[data-bs-theme-value]").forEach((toggle) => {
        toggle.addEventListener("click", () => {
          const v = toggle.getAttribute("data-bs-theme-value");
          const theme2 = v ? v : THEME_AUTO;
          setTheme(theme2, true);
          activeTheme(theme2);
        });
      });
    });
  })();
})();
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibnMtaHVnbzovdG1wL2h1Z29fY2FjaGUvbW9kdWxlcy9maWxlY2FjaGUvbW9kdWxlcy9wa2cvbW9kL2dpdGh1Yi5jb20vaGJzdGFjay9oZWFkZXIvbW9kdWxlcy90aGVtZS10b2dnbGVAdjAuMi4wL2Fzc2V0cy9oYi9tb2R1bGVzL2hlYWRlci10aGVtZS10b2dnbGUvaW5pdC9pbmRleC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiKCgpID0+IHtcbiAgICAndXNlIHN0cmljdCdcblxuICAgIGNvbnN0IFRIRU1FX0FVVE8gPSAnYXV0bydcbiAgICBjb25zdCBUSEVNRV9EQVJLID0gJ2RhcmsnXG4gICAgY29uc3QgVEhFTUVfTElHSFQgPSAnbGlnaHQnXG5cbiAgICBjb25zdCBUSEVNRV9LRVkgPSAnaGItdGhlbWUnXG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIHN5c3RlbSdzIHByZWZlcnJlZCB0aGVtZS5cbiAgICAgKiBcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgICAqL1xuICAgIGNvbnN0IGdldFByZWZlcnJlZFRoZW1lID0gKCk6IHN0cmluZyA9PiB7XG4gICAgICAgIHJldHVybiB3aW5kb3cubWF0Y2hNZWRpYSAmJiB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXMgPyBUSEVNRV9EQVJLIDogVEhFTUVfTElHSFRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgY3VycmVudCB0aGVtZS5cbiAgICAgKiBcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgICAqL1xuICAgIGNvbnN0IGdldFRoZW1lID0gKCk6IHN0cmluZyA9PiB7XG4gICAgICAgIGNvbnN0IHYgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShUSEVNRV9LRVkpXG4gICAgICAgIHJldHVybiB2ID8gdiA6IFRIRU1FX0FVVE9cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZXQgdGhlIHRoZW1lIHdpdGggdGhlIGdpdmVuIHRoZW1lLlxuICAgICAqIFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aGVtZVxuICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gc2F2ZSB3aGV0aGVyIHRvIHNhdmUgaXQgdG8gbG9jYWxTdG9yYWdlLlxuICAgICAqL1xuICAgIGNvbnN0IHNldFRoZW1lID0gKHRoZW1lOiBzdHJpbmcsIHNhdmUgPSBmYWxzZSkgPT4ge1xuICAgICAgICBzYXZlICYmIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFRIRU1FX0tFWSwgdGhlbWUpXG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhlbWUgPT09IFRIRU1FX0FVVE8gPyBnZXRQcmVmZXJyZWRUaGVtZSgpIDogdGhlbWVcbiAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS1icy10aGVtZScsIHZhbHVlKVxuICAgICAgICBvblNldCh2YWx1ZSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFbWl0cyBhIGN1c3RvbSBldmVudCBvbiB0aGVtZSBjaGFuZ2UuXG4gICAgICogXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRoZW1lIFxuICAgICAqL1xuICAgIGNvbnN0IG9uU2V0ID0gKHRoZW1lKSA9PiB7XG4gICAgICAgIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdoYjp0aGVtZScsIHsgZGV0YWlsOiB7IHRoZW1lOiB0aGVtZSB9IH0pO1xuICAgICAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBY3RpdmUgY3VycmVudCB0aGVtZSdzIGljb24uXG4gICAgICogXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IHRoZW1lIFxuICAgICAqL1xuICAgIGNvbnN0IGFjdGl2ZVRoZW1lID0gKHRoZW1lOiBzdHJpbmcpID0+IHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtYnMtdGhlbWUtdmFsdWVdJykuZm9yRWFjaCgodG9nZ2xlKSA9PiB7XG4gICAgICAgICAgICBpZiAodG9nZ2xlLmdldEF0dHJpYnV0ZSgnZGF0YS1icy10aGVtZS12YWx1ZScpID09PSB0aGVtZSkge1xuICAgICAgICAgICAgICAgIHRvZ2dsZS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0b2dnbGUuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcblxuICAgICAgICBjb25zdCBuZXdJY29uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgW2RhdGEtYnMtdGhlbWUtdmFsdWU9XCIke3RoZW1lfVwiXSBzdmdgKT8uY2xvbmVOb2RlKHRydWUpIGFzIEhUTUxFbGVtZW50XG4gICAgICAgIGNvbnN0IG9sZEljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGhlbWUtdG9nZ2xlLWljb24gc3ZnJylcbiAgICAgICAgb2xkSWNvbj8ucmVwbGFjZVdpdGgobmV3SWNvbilcbiAgICB9XG5cbiAgICBjb25zdCB0aGVtZSA9IGdldFRoZW1lKClcbiAgICAvLyBTZXQgdGhlIGRhdGEgYXR0cmlidXRlIEFTQVAsIGluIG9yZGVyIHRvIGF2b2lkIGZsaWNrZXJpbmcuXG4gICAgc2V0VGhlbWUodGhlbWUpXG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsICgpID0+IHtcbiAgICAgICAgLy8gQWN0aXZlIHRoZSB0aGVtZSdzIGljb24gb24gcGFnZSBsb2FkLlxuICAgICAgICBhY3RpdmVUaGVtZSh0aGVtZSlcblxuICAgICAgICB3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7XG4gICAgICAgICAgICBpZiAoZ2V0VGhlbWUoKSAhPT0gVEhFTUVfQVVUTykge1xuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyBETyBOT1Qgc2F2ZSB0aGUgdGhlbWUuXG4gICAgICAgICAgICBzZXRUaGVtZShlLm1hdGNoZXMgPyBUSEVNRV9EQVJLIDogVEhFTUVfTElHSFQpXG4gICAgICAgIH0pXG5cbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtYnMtdGhlbWUtdmFsdWVdJylcbiAgICAgICAgICAgIC5mb3JFYWNoKHRvZ2dsZSA9PiB7XG4gICAgICAgICAgICAgICAgdG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2ID0gdG9nZ2xlLmdldEF0dHJpYnV0ZSgnZGF0YS1icy10aGVtZS12YWx1ZScpXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHRoZW1lID0gdiA/IHYgOiBUSEVNRV9BVVRPXG4gICAgICAgICAgICAgICAgICAgIHNldFRoZW1lKHRoZW1lLCB0cnVlKVxuICAgICAgICAgICAgICAgICAgICBhY3RpdmVUaGVtZSh0aGVtZSlcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICB9KVxufSkoKVxuIl0sCiAgIm1hcHBpbmdzIjogIjs7QUFBQSxHQUFDLE1BQU07QUFDSDtBQUVBLFVBQU0sYUFBYTtBQUNuQixVQUFNLGFBQWE7QUFDbkIsVUFBTSxjQUFjO0FBRXBCLFVBQU0sWUFBWTtBQU9sQixVQUFNLG9CQUFvQixNQUFjO0FBQ3BDLGFBQU8sT0FBTyxjQUFjLE9BQU8sV0FBVyw4QkFBOEIsRUFBRSxVQUFVLGFBQWE7QUFBQSxJQUN6RztBQU9BLFVBQU0sV0FBVyxNQUFjO0FBQzNCLFlBQU0sSUFBSSxhQUFhLFFBQVEsU0FBUztBQUN4QyxhQUFPLElBQUksSUFBSTtBQUFBLElBQ25CO0FBUUEsVUFBTSxXQUFXLENBQUNBLFFBQWUsT0FBTyxVQUFVO0FBQzlDLGNBQVEsYUFBYSxRQUFRLFdBQVdBLE1BQUs7QUFDN0MsWUFBTSxRQUFRQSxXQUFVLGFBQWEsa0JBQWtCLElBQUlBO0FBQzNELGVBQVMsZ0JBQWdCLGFBQWEsaUJBQWlCLEtBQUs7QUFDNUQsWUFBTSxLQUFLO0FBQUEsSUFDZjtBQU9BLFVBQU0sUUFBUSxDQUFDQSxXQUFVO0FBQ3JCLFlBQU0sUUFBUSxJQUFJLFlBQVksWUFBWSxFQUFFLFFBQVEsRUFBRSxPQUFPQSxPQUFNLEVBQUUsQ0FBQztBQUN0RSxlQUFTLGNBQWMsS0FBSztBQUFBLElBQ2hDO0FBT0EsVUFBTSxjQUFjLENBQUNBLFdBQWtCO0FBQ25DLGVBQVMsaUJBQWlCLHVCQUF1QixFQUFFLFFBQVEsQ0FBQyxXQUFXO0FBQ25FLFlBQUksT0FBTyxhQUFhLHFCQUFxQixNQUFNQSxRQUFPO0FBQ3RELGlCQUFPLFVBQVUsSUFBSSxRQUFRO0FBQUEsUUFDakMsT0FBTztBQUNILGlCQUFPLFVBQVUsT0FBTyxRQUFRO0FBQUEsUUFDcEM7QUFBQSxNQUNKLENBQUM7QUFFRCxZQUFNLFVBQVUsU0FBUyxjQUFjLHlCQUF5QkEsTUFBSyxRQUFRLEdBQUcsVUFBVSxJQUFJO0FBQzlGLFlBQU0sVUFBVSxTQUFTLGNBQWMsd0JBQXdCO0FBQy9ELGVBQVMsWUFBWSxPQUFPO0FBQUEsSUFDaEM7QUFFQSxVQUFNLFFBQVEsU0FBUztBQUV2QixhQUFTLEtBQUs7QUFFZCxXQUFPLGlCQUFpQixvQkFBb0IsTUFBTTtBQUU5QyxrQkFBWSxLQUFLO0FBRWpCLGFBQU8sV0FBVyw4QkFBOEIsRUFBRSxpQkFBaUIsVUFBVSxDQUFDLE1BQU07QUFDaEYsWUFBSSxTQUFTLE1BQU0sWUFBWTtBQUMzQjtBQUFBLFFBQ0o7QUFHQSxpQkFBUyxFQUFFLFVBQVUsYUFBYSxXQUFXO0FBQUEsTUFDakQsQ0FBQztBQUVELGVBQVMsaUJBQWlCLHVCQUF1QixFQUM1QyxRQUFRLFlBQVU7QUFDZixlQUFPLGlCQUFpQixTQUFTLE1BQU07QUFDbkMsZ0JBQU0sSUFBSSxPQUFPLGFBQWEscUJBQXFCO0FBQ25ELGdCQUFNQSxTQUFRLElBQUksSUFBSTtBQUN0QixtQkFBU0EsUUFBTyxJQUFJO0FBQ3BCLHNCQUFZQSxNQUFLO0FBQUEsUUFDckIsQ0FBQztBQUFBLE1BQ0wsQ0FBQztBQUFBLElBQ1QsQ0FBQztBQUFBLEVBQ0wsR0FBRzsiLAogICJuYW1lcyI6IFsidGhlbWUiXQp9Cg==
